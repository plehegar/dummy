name: Learning GitHub actions

# Reference documentation: https://docs.github.com/en/actions/reference

# See https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#onpushpull_requestbranchestags
on:
  push:
    branches:
      - deploy

# GitHub secrets are stored in
# https://github.com/[your_repo]/settings/secrets/actions
# for example:
#  https://github.com/w3c/pointerevents/settings/secrets/actions

jobs:

# All of the following jobs will run in parallel

  use-deploy-script:
    name: Using a shell script to deploy a build folder on a GitHub branch
    runs-on: ubuntu-latest
    env:
      FOLDER: deploybuild
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TRAVIS_REPO_SLUG: ${{ github.repository }}
      TRAVIS_BRANCH: ${{ github.head_ref }}
      TRAVIS_PULL_REQUEST: ${{ github.event.number }}
    steps:
      - uses: actions/checkout@v2
      # don't forget: git update-index --chmod +x ./.github/scripts/build-output-git.sh
      - name: Set ENV variables
        run: |
          echo "::set-env name=TRAVIS_BRANCH::${TRAVIS_BRANCH:-$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')}"
          echo "::set-env name=TRAVIS_SECURE_ENV_VARS::$(if [ -z "${{ secrets.something }}" ]; then echo "false"; else echo "true"; fi)"
          echo "::set-env name=TRAVIS_EVENT_TYPE::$(if [ "schedule" == "${{ github.event_name }}" ]; then echo "cron"; else echo "${{ github.event_name }}"; fi)"

      - name: Print Travis ENV vars
        run: |
          echo "TRAVIS_BRANCH: ${TRAVIS_BRANCH}"
          echo "TRAVIS_PULL_REQUEST: ${TRAVIS_PULL_REQUEST}"
          echo "TRAVIS_REPO_SLUG: ${TRAVIS_REPO_SLUG}"
          echo "TRAVIS_SECURE_ENV_VARS: ${TRAVIS_SECURE_ENV_VARS}"

      - name: Run the build-output-git.sh script
        run: ./.github/scripts/build-output-git.sh
        shell: bash
